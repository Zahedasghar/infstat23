---
title: "Lab on data analytics with pakwheels data"
author: "Zahid Asghar"
footer: "[pakwheels](https://zahidasghar.com/dataanalytics/pakwheels)"
format: html
---



## Introduction

 Statistics main focus is turning information into
knowledge and the very first step is to summarize and describe the raw
information - the data. In this lab we explore `pakwheels` data scrapped from Pakwheels website. Purpose of this lab is to learn analytics by doing. We will generate simple graphical and numerical summaries of data on these used car sales data and explore its. As this is a large
data set, along the way you'll also learn the indispensable skills of data
processing and subsetting.

## Getting started

### Load packages

In this lab we will explore the data using the `dplyr` package and visualize it
using the `ggplot2` package for data visualization. Or other way round is to use `tidyverse` package which contains many useful packages in itself.
Let's load the packages.

```{r }
#| warning: false
library(statsr)
library(dplyr)
library(ggplot2)
```

### Data

The [Pakwheels data](http://www.pakwheels.com/)
scrapped from website we will be working with in this lab. [Data can be downloaded](https://github.com/Zahedasghar/data_analytics/blob/main/pakwheels.rds). This is R data which you can directly read in R.

We begin by loading the `pakwheels` data frame. Type the following in your console
to load the data:

```{r }

pakwheels <- readRDS("D:/RepTemplates/infstat23/slides/pakwheels.rds")
```

The data frame containing `r nrow(pakwheels)` cars that shows up in your
workspace is a *data matrix*, with each row representing an *observation* and each
column representing a *variable*. R calls this data format a **data frame**, which is
a term that will be used throughout the labs.

To view the names of the variables, type the command and `clean_names` using `janitor` package.

```{r }

names(pakwheels)
library(janitor)

pakwheels <- pakwheels |> clean_names()

pakwheels
```

This returns the names of the variables in this data frame. The **codebook**
  (description of the variables) is included below. 

- `ad_no`, : Advertisement Number
- `name` : Name of a company
- `price`: Price in PKR
- `model_year`: Model year
+ `location`:           Location of a car
+ `mileage`:      Number of KM car has driven
+ `registration_city`:        City of registration
+ `engine_type`:            Petrol or Diesel or other
+ `engine_capacity`:        How many cc engine
+ `transmission`:    Manual or Automatic
+ `color`:      color of a car
+ `assembly`: Imported or local
+ `body_type`:      Type of body (Sedan/SUV/...)
+ `features`:                   Features
+ `last_updated`:       Date of last update
+ `url`:       URL


A very useful function for taking a quick peek at your data frame, and viewing
its dimensions and data types is  `glimpse`

```{r }
glimpse(pakwheels)
```

The `pakwheels` data frame has lot of information. But let us have little cleaning as price is numeric variable but her its a character, url is not of any usage for us in this data so can be dropped and similar we need company names (first word from variable `name`).


```{r}
#| echo: false
pakwheels$price<-as.numeric(pakwheels$price) ## To convert price as numeric, R-base command. There are other ways to do the same
pakwheels$hp <- as.numeric(gsub("([A-Za-z]+).*", "", pakwheels$engine_capacity)) ## To take numeric values from variable Engine Capacity and lets give it a new name: hp.
pakwheels$company <- gsub("([A-Za-z]+).*", "\\1", pakwheels$name)  ## To take first word from column Name for taking it a 
```

```{r}
glimpse(pakwheels)

```

Let's think about
some questions we might want to answer with these data:

- Can we answer a question: what is the best car? 
**No we cant answer this question**
- But we can answer which car is used the most. So find which car is sold the most.
- Or we might want to determine which of the three major companies has maximum cars.

### Seven verbs

The `dplyr` package offers seven verbs (functions) for basic data
manipulation:

- `filter()`
- `arrange()`
- `select()`
- `distinct()`
- `mutate()`
- `summarise()`
- `sample_n()`

We will use some of these functions in this lab, and learn about others in a
future lab.


## Analysis

### Question 1

How many observations are left in the data after droping missing observations from data?

```{r q1}

```

### Question 2

  -  Take the `pakwheels` data frame, drop missing observations and use `filter` for cars manufactured by **Suzuki** company and save as a new frame called `suzuki_cars`.
```{r q2}

```

### Question 3

Calculate mean and standard deviation of price of **Suzuki** company vehicles.

```{r q3}

```

Note that in the `summarise` function we created a list of two elements. The
names of these elements are user defined, like `mean_dd`, `sd_dd`, `n`, and
you could customize these names as you like (just don't use spaces in your
names). Calculating these summary statistics also require that you know the
function calls. Note that `n()` reports the sample size.


**Summary statistics: ** Some useful function calls for summary statistics for a
single numerical variable are as follows:

- `mean`
- `median`
- `sd`
- `var`
- `IQR`
- `range`
- `min`
- `max`

We can also filter based on multiple criteria. Suppose we are interested in
cars headed to by Toyota and are between 1000 and 1300 cc engine_capacity, save it as toyota_cars_small.

```{r}
pakwheels |> na.omit() |> 
  filter(company=="Toyota", hp>999 &hp<1300)
```


### Question 4 

How many  cars of white color having engine_capacity between 1000 and 1300 cc. 

```{r q4}

```


### Question 5

Calculate mean, median, sd, min, max and IQR from `toyota_car_small` using summarise function.

```{r q5}

```


### Question 6

Repeat question 5 for all cars having engine capacity between 1200 and 1300 cc.
```{r q6}

```




### Question 7
 
How many total vehicles by each company.

```{r q7}

```


### Question 8

Calculate a new variable `price_mill` using `mutate` in `pakwheels` data frame. 

```{r q8}

```


### Question 9

How many cars are  under 1800 and above 1800 are unregistered, respectively? What proportion of cars under 1800 cc and above 1800 cc are unregistered ?

```{r q9}

```

### Question 10

What proporiton of cars manufactured locally and imported unregistered? 
```{r q10}

```

### Question 11 

What is the most old car displayed for sale i-e `model_year` and also count cars by `model_year`. 

```{r q11}

```


### Question 12 

Use `arrange` and list number of cars by color in ascedning and descending order. Which color car is sold the most, second most and third most. 

```{r q12 }

```


### Question 13 

Which company car having engine_capacity 1300 cc costs the most.

```{r 13a}

```

 How many cars with model_year 2017 with 1300 cc engine capacity are listed for sale?

```{r 13b}

```

